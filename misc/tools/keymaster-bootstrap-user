#! /bin/bash --posix
#
# keymaster-bootstrap-user
#
# Usage: keymaster-bootstrap-user user...

set -eu
set -o pipefail

# Constants.
readonly certFile="$HOME/.ssl/keymaster.cert"
readonly keyFile="$HOME/.ssl/keymaster.key"

# Configuration defaults.
duration=6h

# Load (source) the configuration file. This must contain the following
# variables:
#   emailDomain
#   keymasterHostname
# The following are optional variables:
#   duration
#
eval "$(cat ~/.config/keymaster-bootstrap-user/flags.default | tr -d ' ')"

add_user ()
{
    local -r user="$1"
    curl --cert "$certFile" --key "$keyFile"       \
	 -d "username=$user"                       \
	 -s                                        \
	"https://$keymasterHostname/admin/addUser"
}

process_user ()
{
    local -r user="$1"

    add_user "$user" > /dev/null
    out=$(curl	--cert "$certFile" --key "$keyFile"     \
		-d "username=$user&duration=$duration"  \
		-s                                      \
		"https://$keymasterHostname/admin/newBoostrapOTP")
    otp=$(echo "$out" | tr ,}{ '\n' | tr -d '"' | tr : ' ' |\
	  awk '/BootstrapOTPValue/ {print $2}')
    if [ -z "$otp" ]; then
	echo "$out"
	return 1
    fi
    send_mail "$user" "$otp"
}

send_mail ()
{
    local -r username="$1"
    local -r otp_value="$2"
    mail -s 'Welcome to Keymaster' "$username@$emailDomain" <<EoF
  Hi, $username. Welcome to Keymaster. Please log in to:
https://$keymasterHostname/

Your one-time passcode (Bootstrap OTP) is:
$otp_value

Please register your U2F security key after login.

You have $duration to complete this operation before this passcode expires.
EoF
}

for _user in "$@"; do
    process_user "$_user"
done
